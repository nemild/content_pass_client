{"version":3,"sources":["webpack:///webpack/bootstrap feecd690deb699084b80","webpack:///./src/extension_script.js","webpack:///./src/ProviderStore.js","webpack:///./src/TopUrlStore.js","webpack:///./src/UrlVariation.js","webpack:///./src/Downloader.js","webpack:///./src/SubmittedUrlStore.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;0CCrC8C,CAAiB;;;;wCACvC,CAAe;;;;8CACT,CAAqB;;;;;AAGnD,KAAM,eAAe,GAAG,qCAAqC,CAAC;;AAE9D,KAAM,sBAAsB,GAAG,mBAAmB,CAAC;AACnD,KAAM,kBAAkB,GAAG,iBAAiB,CAAC;;;AAG7C,KAAM,wBAAwB,GAAG,EAAE,CAAC;AACpC,KAAM,qBAAqB,GAAG,CAAC,CAAC;;;AAGhC,KAAM,oBAAoB,GAAG,sBAAsB,CAAC;AACpD,KAAM,wBAAwB,GAAG,0BAA0B,CAAC;AAC5D,KAAM,eAAe,GAAG,iBAAiB,CAAC;AAC1C,KAAM,gCAAgC,GAAG,kCAAkC,CAAC;AAC5E,KAAM,2BAA2B,GAAG,aAAa,CAAC;;;AAGlD,KAAM,oBAAoB,GAAI,sBAAsB,CAAC;AACrD,KAAM,qBAAqB,GAAG,sBAAsB,CAAC;;AAErD,KAAM,uCAAuC,GAAG,EAAE,GAAG,EAAE,CAAC;;AAExD,KAAM,OAAO,GAAG;AACd,OAAI,EAAE,CAAC;AACP,OAAI,EAAE,CAAC;AACP,OAAI,EAAE,CAAC;EACR,CAAC;AACF,KAAM,kBAAkB,GAAG,IAAI,CAAC;;;AAGhC,KAAM,aAAa,GAAG,OAAO,CAAC;AAC9B,KAAM,mBAAmB,GAAG,aAAa,CAAC;AAC1C,KAAM,cAAc,GAAG,QAAQ,CAAC;AAChC,KAAM,sBAAsB,GAAG,gBAAgB,CAAC;AAChD,KAAM,oBAAoB,GAAG,cAAc,CAAC;AAC5C,KAAM,uBAAuB,GAAG,iBAAiB,CAAC;;;AAGlD,UAAS,QAAQ,GAAG;AAClB,OAAM,IAAI,GAAG,YAAY,CAAC,EAAE,CAAC;AAC7B,UAAO,IAAI,CAAC;EACb;;AAED,UAAS,oBAAoB,GAAG;AAC9B,OAAM,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;AACrB,UAAO,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC;EAC7C;;AAED,UAAS,gBAAgB,GAAG;AAC1B,OAAI,EAAE,GAAG,gCAAiB,CAAC;AAC3B,KAAE,CAAC,4BAA4B,EAAE,CAAC;EACnC;;AAED,UAAS,cAAc,GAAG;AACxB,SAAM,CAAC,aAAa,CAAC,OAAO,CAAC,EAAC,MAAM,EAAE,qBAAqB,EAAC,CAAC,CAAC;EAC/D;;AAED,UAAS,mBAAmB,GAAG;AAC7B,SAAM,CAAC,aAAa,CAAC,YAAY,CAAC,EAAC,MAAM,EAAE,YAAY,CAAC,oBAAoB,CAAC,EAAC,CAAC,CAAC;EACjF;;AAED,UAAS,sBAAsB,GAAG;AAC9B,OAAI,YAAY,CAAC,eAAe,CAAC,KAAK,SAAS,EAAE;AAC/C,iBAAY,CAAC,eAAe,CAAC,GAAG,MAAM,CAAC;IACxC;EACJ;;AAED,UAAS,sBAAsB,GAAG;AAChC,eAAY,CAAC,2BAA2B,CAAC,GAAG,WAAW,CACrD,gBAAgB,EAChB,wBAAwB,GAAG,KAAK,CACjC,CAAC,QAAQ,EAAE,CAAC;AACb,mBAAgB,EAAE,CAAC;EACpB;;AAED,UAAS,sBAAsB,GAAG;AAChC,OAAI,YAAY,CAAC,2BAA2B,CAAC,EAAE;AAC7C,kBAAa,CAAC,QAAQ,CAAC,YAAY,CAAC,2BAA2B,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACvE,YAAO,YAAY,CAAC,2BAA2B,CAAC,CAAC;IAClD;EACF;;;;AAID,UAAS,sBAAsB,GAAG;AAChC,yBAAsB,EAAE,CAAC;AACzB,yBAAsB,EAAE,CAAC;EAC1B;;AAED,UAAS,mBAAmB,GAAG;AAC7B,OAAM,QAAQ,GAAG,gCAAmB,CAAC;AACrC,OAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,iCAAkB,CAAC;AAC5D,OAAI,YAAY,CAAC,eAAe,CAAC,KAAK,MAAM,IAAI,UAAU,EAAE;AAC1D,SAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAC5C,SAAM,6BAA6B,GAAG,CAAE,IAAI,IAAI,KAAG,YAAY,IAAK,IAAI,CAAC;;AAEzE,SAAI,6BAA6B,GAAG,wBAAwB,GAAG,EAAE,GAAG,qBAAqB,EAAG;AAC1F,cAAO,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;AAC3C,6BAAsB,EAAE,CAAC;MAC1B;IACF;EACF;;;;AAID,UAAS,YAAY,CAAC,GAAG,EAAE,UAAU,EAAE,eAAe,EAAE,eAAe,EAAyB;OAAvB,aAAa,yDAAG,KAAK;;AAC5F,OAAM,IAAI,GAAG,YAAY,CAAC,EAAE,CAAC;;AAE7B,OAAI,CAAC,QAAQ,EAAE,EAAE;AACf,YAAO,KAAK,CAAC;IACd;;AAED,OAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;AAC1B,WAAM,EAAE,IAAI;AACZ,UAAK,EAAE,GAAG;AACV,aAAQ,EAAE,UAAU;AACpB,qBAAgB,EAAE,aAAa;AAC/B,0BAAqB,EAAE,oBAAoB,EAAE;IAC9C,CAAC,CAAC;AACH,IAAC,CAAC,IAAI,CAAC;AACL,UAAK,EAAE,eAAe,GAAG,sBAAsB;AAC/C,WAAM,EAAE,MAAM;AACd,WAAM,EAAE,IAAI;AACZ,kBAAa,EAAE,kBAAkB;AACjC,eAAU,EAAE,MAAM;IACnB,CAAC,CAAC,IAAI,CAAC,SAAS,2BAA2B,CAAC,QAAQ,EAAE,UAAU,EAAE,GAAG,EAAE;;AAEtE,SAAI,WAAW,GAAI,IAAI,IAAI,EAAE,CAAE,OAAO,EAAE,CAAC;AACzC,SAAI,QAAQ,CAAC,YAAY,CAAC,wBAAwB,CAAC,EAAE,EAAE,CAAC,KAAK,WAAW,EAAE;AACxE,mBAAY,CAAC,wBAAwB,CAAC,GAAG,WAAW,CAAC,QAAQ,EAAE,CAAC;AAChE,mBAAY,CAAC,oBAAoB,CAAC,GAAG,GAAG,CAAC;MAC1C;;AAED,SAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;AACtB,aAAM,CAAC,aAAa,CAAC,OAAO,CAAC,EAAC,MAAM,EAAE,oBAAoB,EAAC,CAAC,CAAC;AAC7D,mBAAY,CAAC,oBAAoB,CAAC,GAAG,CAAC,QAAQ,CAAE,YAAY,CAAC,oBAAoB,CAAC,EAAE,EAAE,CAAE,GAAG,CAAC,EAAE,QAAQ,EAAE,CAAC;AACzG,iBAAU,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;AACjC,0BAAmB,EAAE,CAAC;AACtB,2BAAoB,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;MACvC,MAAM,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;AAC7B,WAAI,QAAQ,IAAI,QAAQ,CAAC,uBAAuB,EAAE;AAChD,qBAAY,CAAC,oBAAoB,CAAC,GAAG,CAAC,QAAQ,CAAE,YAAY,CAAC,oBAAoB,CAAC,EAAE,EAAE,CAAE,GAAG,CAAC,EAAE,QAAQ,EAAE,CAAC;QAC1G;AACD,aAAM,CAAC,aAAa,CAAC,YAAY,CAAC,EAAC,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;AACpD,iBAAU,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;AACtC,2BAAoB,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;MACvC;;AAED,SAAI,eAAe,EAAE;AACnB,sBAAe,EAAE,CAAC;MACnB;IACF,CAAC,CAAC,IAAI,CAAC,SAAS,2BAA2B,CAAC,KAAK,EAAE,UAAU,EAAE,WAAW,EAAG;AAC5E,YAAO,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;;AAEzC,SAAI,eAAe,EAAE;AACnB,2BAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACjC,sBAAe,EAAE,CAAC;MACnB;IACF,CAAC,CAAC;EACJ;;AAED,UAAS,oBAAoB,CAAC,GAAG,EAAE,MAAM,EAAE;AACzC,OAAI,GAAG,GAAG,IAAI,CAAC;AACf,OAAI,GAAG,KAAK,MAAM,IAAI,MAAM,KAAK,CAAC,CAAC,EAAE;AACnC,QAAG,GAAG,oCAAuB,CAAC;AAC9B,QAAG,CAAC,eAAe,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAClC;;AAED,OAAG,CAAC,YAAY,CAAC,gCAAgC,CAAC,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,gCAAgC,CAAC,CAAC,GAAG,uCAAuC,GAAG,EAAE,GAAG,IAAI,GAAI,IAAI,IAAI,EAAC,EAAG;AACjL,SAAI,CAAC,GAAG,EAAE;AAAE,UAAG,GAAG,oCAAuB,CAAC;MAAE;AAC5C,QAAG,CAAC,mBAAmB,EAAE,CAAC;AAC1B,iBAAY,CAAC,gCAAgC,CAAC,GAAG,IAAI,IAAI,GAAC;IAC5D;EACF;;AAED,UAAS,SAAS,CAAC,GAAG,EAAE,UAAU,EAAE,eAAe,EAAE,eAAe,EAAyB;OAAvB,aAAa,yDAAG,KAAK;;AACzF,OAAI,CAAC,QAAQ,EAAE,EAAE;AACf,YAAO,KAAK,CAAC;IACd;AACD,eAAY,CAAC,GAAG,EAAE,UAAU,EAAE,eAAe,EAAE,eAAe,EAAE,aAAa,CAAC,CAAC;EAChF;;AAED,UAAS,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE;AACxC,OAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC;AAC1B,YAAO,EAAE,KAAK;AACd,eAAU,EAAE,QAAQ;AACpB,+BAA0B,EAAE,oBAAoB,EAAE;IACnD,CAAC,CAAC;;AAEH,IAAC,CAAC,IAAI,CAAC;AACL,UAAK,EAAE,eAAe,GAAG,kBAAkB;AAC3C,WAAM,EAAE,MAAM;AACd,WAAM,EAAE,IAAI;AACZ,kBAAa,EAAE,kBAAkB;AACjC,eAAU,EAAE,MAAM;IACnB,CAAC,CAAC,IAAI,CAAC,SAAS,oBAAoB,CAAC,YAAY,EAAE;AAClD,iBAAY,CAAC,oBAAoB,CAAC,GAAG,YAAY,CAAC,+BAA+B,CAAC;AAClF,iBAAY,CAAC,wBAAwB,CAAC,GAAK,IAAI,IAAI,EAAE,CAAE,OAAO,EAAE,CAAE,QAAQ,EAAE,CAAC;AAC7E,wBAAmB,EAAE,CAAC;;;AAGtB,2BAAsB,EAAE,CAAC;;AAEzB,aAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC,CAAC,IAAI,CAAC,SAAS,oBAAoB,GAAG;;AAEtC,aAAQ,CAAC,EAAE,CAAC,CAAC;IACd,CAAC,CAAC;EACJ;;AAED,UAAS,cAAc,GAAG;AACxB,OAAI,YAAY,CAAC,eAAe,CAAC,KAAK,OAAO,EAAE;AAC7C,iBAAY,CAAC,eAAe,CAAC,GAAG,MAAM,CAAC;AACvC,2BAAsB,EAAE,CAAC;AACzB,YAAO,IAAI,CAAC;IACb,MAAM,IAAI,YAAY,CAAC,eAAe,CAAC,KAAK,MAAM,EAAE;AACnD,2BAAsB,EAAE,CAAC;AACzB,iBAAY,CAAC,eAAe,CAAC,GAAG,OAAO,CAAC;AACxC,YAAO,KAAK,CAAC;IACd;AACD,UAAO,EAAE,CAAC;EACX;;AAED,OAAM,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,CAClC,SAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE;AAC7C,WAAQ,OAAO,CAAC,OAAO;AACrB,UAAK,oBAAoB;AACtB,uCAAiB,CAAE,WAAW,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AACvD,aAAM;AACR,UAAK,uBAAuB;AACzB,uCAAiB,CAAE,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC1D,aAAM;AACR,UAAK,aAAa;AAChB,YAAK,CACH,OAAO,CAAC,KAAK,EACb,OAAO,CAAC,QAAQ,EAChB,SAAS,aAAa,CAAC,IAAI,EAAE;AAC3B,aAAI,IAAI,IAAI,IAAI,KAAK,EAAE,EAAE;AACvB,uBAAY,CAAC,EAAE,GAAG,IAAI,CAAC;UACxB;AACD,qBAAY,CAAC;AACX,eAAI,EAAE,IAAI;UACX,CAAC,CAAC;AACH,aAAI,YAAY,CAAC,EAAE,EAAE;AACnB,iCAAsB,EAAE,CAAC;UAC1B;QACF,CAAC,CAAC;AACH,cAAO,IAAI,CAAC;AAChB,UAAK,cAAc;AACjB,cAAO,YAAY,CAAC,EAAE,CAAC;AACvB,6BAAsB,EAAE,CAAC;AACzB,cAAO,YAAY,CAAC,oBAAoB,CAAC,CAAC;AAC1C,aAAM,CAAC,aAAa,CAAC,YAAY,CAAC,EAAC,MAAM,EAAE,EAAE,EAAC,CAAC,CAAC;;AAEhD,mBAAY,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;AACjC,aAAM;AACR,UAAK,mBAAmB;AACtB,WAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC;AAC3B,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACjB,0BAAmB,EAAE,CAAC;AACtB,WAAM,OAAO,GAAG,8BAAiB,CAAC;AAClC,WAAI,YAAY,CAAC,eAAe,CAAC,KAAK,OAAO,IAAI,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;AACtE,kBAAS,CACP,GAAG,EACH,OAAO,CAAC,kBAAkB,CAAC,EAC3B,SAAS,yBAAyB,CAAC,QAAQ,EAAE;AAC3C,uBAAY,CAAC,EAAC,SAAS,EAAE,MAAM,EAAC,CAAC,CAAC;UACnC,EACD,SAAS,yBAAyB,CAAC,QAAQ,EAAE;AAC3C,uBAAY,CAAC,EAAC,SAAS,EAAE,OAAO,EAAC,CAAC,CAAC;UACpC,CACF,CAAC;AACF,gBAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC/B,MAAM;;AAEL,gBAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACzB;AACD,aAAM;AACR,UAAK,sBAAsB;AACzB,mBAAY,CAAC,EAAC,aAAa,EAAE,cAAc,EAAE,EAAE,CAAC,CAAC;AACjD,aAAM;AACR;AACE,WAAI,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AAC7C,aAAM,IAAG,GAAG,OAAO,CAAC,GAAG,CAAC;AACxB,kBAAS,CACP,IAAG,EACH,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,EACxB,SAAS,yBAAyB,CAAC,QAAQ,EAAE;AAC3C,uBAAY,CAAC,EAAC,SAAS,EAAE,MAAM,EAAC,CAAC,CAAC;UACnC,EACD,SAAS,yBAAyB,CAAC,QAAQ,EAAE;AAC3C,uBAAY,CAAC,EAAC,SAAS,EAAE,OAAO,EAAC,CAAC,CAAC;UACpC,EACD,IAAI,CAAC,CAAC;AACN,gBAAO,IAAI,CAAC;QACf,MAAM;AACL,gBAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC5B;AACD,aAAM;AAAA,IACP;EACF,CACF,C;;;;;;;;;;;;;;;;;;wCCnTuB,CAAe;;;;;AAEvC,KAAM,aAAa,GAAG,eAAe,CAAC;;;AAG/B,KAAM,gBAAgB,GAAG,YAAY,CAAC;;AACtC,KAAM,2BAA2B,GAAG,SAAS,CAAC;;;;;;;AAKxC,uBAAG;;IAAE;;;;;;YAGI,8BAAC,SAAS,EAAE;AAC9B,WAAI,SAAS,IAAI,SAAS,KAAK,EAAE,EAAE;AACjC,oBAAW,CAAC,2BAA2B,GAAG,SAAS,CAAC,CAAC;QACtD;MACF;;;YAEU,qBAAC,QAAQ,EAAE;AACpB,WAAI,CAAC,wBAAwB,EAAE,CAAC;;AAEhC,WAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;AAClC,WAAI,CAAC,iBAAiB,EAAE,CAAC;;AAEzB,WAAI,CAAC,GAAG,EAAE,CAAC;AACX,QAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;AACjB,WAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC;MACtC;;;;;YAG2B,wCAA0B;WAAzB,gBAAgB,yDAAG,IAAI;;AAClD,WAAI,YAAY,GAAG,gBAAgB,CAAC;AACpC,WAAI,CAAC,YAAY,EAAE;AACjB,aAAI,CAAC,wBAAwB,EAAE,CAAC;AAChC,qBAAY,GAAG,IAAI,CAAC,aAAa,CAAC;QACnC;AACD,WAAM,CAAC,GAAG,8BAAiB,CAAC;;AAE5B,YAAK,IAAI,YAAY,IAAI,YAAY,EAAE;AACrC,aAAI,YAAY,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE;AAC7C,eAAI,YAAY,CAAC,UAAU,CAAC,gBAAgB,CAAC,EAAE;AAC7C,cAAC,CAAC,4BAA4B,EAAE,CAAC;YAClC,MAAM,IAAI,YAAY,CAAC,UAAU,CAAC,2BAA2B,CAAC,EAAE;AAC/D,iBAAM,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC;AAC9B,iBAAM,SAAS,GAAG,YAAY,CAAC,MAAM,CACnC,CAAC,IAAI,CAAC,GAAG,2BAA2B,CAAC,MAAM,CAAC,CAC7C,CAAC;AACF,cAAC,CAAC,mCAAmC,CAAC,SAAS,CAAC,CAAC;YAClD;UACF;QACF;MACF;;;YAEsB,iCAAC,SAAS,EAAE;AACjC,qBAAc,CAAC,2BAA2B,GAAG,SAAS,CAAC,CAAC;MACzD;;;YAEa,wBAAC,QAAQ,EAAE;AACvB,WAAI,CAAC,wBAAwB,EAAE,CAAC;;AAEhC,cAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AACpC,WAAI,CAAC,iBAAiB,EAAE,CAAC;;AAExB,qCAAe,CAAE,yBAAyB,CAAC,QAAQ,CAAC,CAAC;MACvD;;;YAE6B,wCAAC,QAAQ,EAAE;AACvC,WAAI,CAAC,wBAAwB,EAAE,CAAC;AAChC,WAAI,QAAQ,IAAI,IAAI,CAAC,aAAa,EAAE;AAClC,aAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;AAC1C,aAAI,CAAC,iBAAiB,EAAE,CAAC;AACzB,gBAAO,IAAI,CAAC;QACb;AACD,cAAO,KAAK,CAAC;MACd;;;YAEkB,+BAAG;AACpB,WAAI,CAAC,wBAAwB,EAAE,CAAC;;AAEhC,cAAO,IAAI,CAAC,aAAa,CAAC;MAC3B;;;YAEY,uBAAC,QAAQ,EAAE;AACtB,WAAI,CAAC,wBAAwB,EAAE,CAAC;AAChC,cAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;MACrC;;;;;YAGuB,oCAAG;AACzB,WAAI,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;;AAE9C,WAAI,CAAC,IAAI,CAAC,aAAa,EAAE;AACvB,aAAI,CAAC,aAAa,GAAI,EAAE,CAAC;AACzB,aAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC;AAC1C,aAAI,CAAC,iBAAiB,EAAE,CAAC;QAC1B;MACF;;;YAEgB,6BAAG;AAClB,WAAI,YAAY,CAAC,aAAa,CAAC,EAAE;AAC/B,gBAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC;QAChD,MAAM;AAAE,gBAAO,IAAI,CAAC;QAAE;MACxB;;;YAEgB,6BAAG;AAClB,mBAAY,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;MAClE;;;;;;;;;;;;;;;;;;;;;;;;yCC5GsB,CAAgB;;;;0CACkC,CAAiB;;;;uCACrE,CAAc;;;;AAErC,KAAM,QAAQ,GAAG,UAAU,CAAC;;;AAGf,uBAAG;;IAAE;;;;YAER,kBAAC,GAAG,EAAE;AACZ,WAAI,CAAC,GAAG,IAAI,GAAG,KAAK,EAAE,EAAE;AACtB,gBAAO,KAAK,CAAC;QACd;;AAED,WAAM,MAAM,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AACtC,WAAM,EAAE,GAAG,8BAAiB,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;AAC/C,WAAM,kBAAkB,GAAG,EAAE,CAAC,wBAAwB,EAAE,CAAC;;AAEzD,WAAI,CAAC,kBAAkB,IAAI,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAG;AAC3D,gBAAO,KAAK,CAAC;QACd;;;AAGD,YAAK,IAAI,CAAC,GAAG,CAAC,EAAE,OAAM,GAAG,kBAAkB,CAAC,MAAM,EAAE,CAAC,GAAG,OAAM,EAAE,CAAC,EAAE,EAAE;AACnE,aAAI,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;AAChD,kBAAO,IAAI,CAAC;UACb;QACF;;AAED,cAAO,KAAK,CAAC;MACd;;;YAE2B,wCAAG;AAC7B,WAAM,IAAI,GAAG,IAAI,CAAC;AAClB,WAAM,UAAU,GAAG,6BAAgB,CAAC;AACpC,iBAAU,CAAC,aAAa,CACtB,SAAS,SAAS,CAAC,QAAQ,EAAE;AAC3B,aAAI,CAAC,kBAAkB,kCAAmB,QAAQ,CAAC,CAAC;QACrD,EACD,SAAS,SAAS,GAAG,EAAE,CACxB,CAAC;MACH;;;YAEkC,6CAAC,SAAS,EAAE;AAC7C,WAAM,IAAI,GAAG,IAAI,CAAC;AAClB,WAAM,UAAU,GAAG,6BAAgB,CAAC;AACpC,iBAAU,CAAC,oBAAoB,CAC7B,SAAS,EACT,SAAS,gBAAgB,CAAC,QAAQ,EAAE;AAClC,aAAI,CAAC,kBAAkB,CAAE,6CAA8B,SAAS,CAAC,WAAW,EAAE,EAAE,QAAQ,CAAC,CAAC;QAC3F,EACD,SAAS,gBAAgB,GAAG,EAAE,CAC/B,CAAC;MACH;;;;;YAOiB,4BAAC,YAAY,EAAE,IAAI,EAAE;AACrC,WAAI,CAAC,sBAAsB,EAAE,CAAC;AAC9B,WAAI,CAAC,WAAW,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;AACtC,WAAI,CAAC,eAAe,EAAE,CAAC;;AAEvB,WAAM,QAAQ,GAAG,gCAAmB,CAAC;AACrC,eAAQ,CAAC,8BAA8B,CAAC,YAAY,CAAC,CAAC;MACvD;;;YAEwB,mCAAC,QAAQ,EAAE;AAClC,WAAI,CAAC,sBAAsB,EAAE,CAAC;AAC9B,cAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AAClC,WAAI,CAAC,eAAe,EAAE,CAAC;MACxB;;;YAEc,2BAAG;AAChB,WAAI,CAAC,sBAAsB,EAAE,CAAC;;AAE9B,WAAI,IAAI,GAAG,EAAE,CAAC;AACd,YAAK,IAAI,QAAQ,IAAI,IAAI,CAAC,WAAW,EAAE;AACrC,aAAI,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;AAC7C,eAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;UAChD;QACF;AACD,cAAO,IAAI,CAAC;MACb;;;YAEqB,kCAAG;AACvB,WAAI,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAC1C,WAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AACrB,aAAI,CAAC,WAAW,GAAG,EAAE,CAAC;AACtB,aAAI,CAAC,eAAe,EAAE,CAAC;QACxB;MACF;;;YAEc,2BAAG;AAChB,WAAI,YAAY,CAAC,QAAQ,CAAC,EAAE;AAC1B,gBAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC3C,MAAM;AAAE,gBAAO,IAAI,CAAC;QAAE;MACxB;;;YAEc,2BAAG;AAChB,mBAAY,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;MAC3D;;;YAhDsB,4BAAG,EAEzB;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDH,UAAS,QAAQ,CAAC,GAAG,EAAE;AACrB,OAAI,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC;AACzB,OAAI,CAAC,GAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,GAAG,QAAQ,GAAG,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAChE,OAAI,GAAG,GAAG,EAAE,CAAC;AACb,OAAI,CAAC,GAAK,EAAE,CAAC;;AAEb,UAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;;AAEvC,MAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;AACnB,MAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,SAAS,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AACnE,SAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;IAChC,CAAC,CAAC;;AAEH,UAAO,GAAG,CAAC;EACZ;;AAED,SAAQ,CAAC,OAAO,GAAG;AACjB,eAAY,EAAE,KAAK;AACnB,QAAK,EAAE,CAAC,QAAQ,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC;AACtJ,MAAG,EAAE;AACH,WAAM,EAAE,UAAU;AAClB,aAAQ,EAAE,2BAA2B;IACtC;AACD,WAAQ,EAAE;AACR,aAAQ,EAAE,yIAAyI;AACnJ,YAAO,EAAE,kMAAkM;IAC5M;EACF,CAAC;;;AAGW,qBAAC,GAAG,EAAE;;;AACf,SAAI,GAAG,EAAE;AACP,WAAI,CAAC,GAAG,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;AAC7B,WAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AACtB,WAAI,IAAI,CAAC,GAAG,EAAE;AACZ,aAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACrC;MACF;IACF;;;;;;YAGuB,oCAAG;;;AAGzB,WAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AACnD,gBAAO,IAAI,CAAC;QACb;;AAED,WAAI,kBAAkB,GAAG,CAAE,IAAI,CAAC,GAAG,CAAE,CAAC;AACtC,WAAI,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACzD,WAAI,cAAc,EAAE;AAClB,2BAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACzC;;AAED,WAAI,YAAY,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;AACjD,WAAI,YAAY,EAAE;AAChB,2BAAkB,GAAG,kBAAkB,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAC9D;;AAED,cAAO,kBAAkB,CAAC;MAC3B;;;;;YAGqB,kCAAG;AACvB,WAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;AACvB,WAAI,OAAO,GAAG,EAAE,CAAC;;AAEjB,WAAI,CAAC,CAAC,KAAK,EAAE;AACX,aAAI,kBAAkB,aAAC;AACvB,2BAAkB,GAAG,CAAC,CAAC,QAAQ,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC;AACjD,aAAI,CAAC,CAAC,IAAI,EAAE;AACV,6BAAkB,IAAI,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC;UACpC;AACD,2BAAkB,IAAI,CAAC,CAAC,IAAI,CAAC;AAC7B,aAAI,CAAC,CAAC,MAAM,EAAE;AACZ,6BAAkB,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC;UACtC;AACD,gBAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;;AAEjC,aAAI,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,CAAC;AACnE,aAAI,cAAc,EAAE;AAClB,kBAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;UAC9B;;AAED,gBAAO,OAAO,CAAC;QAChB;;AAED,cAAO,IAAI,CAAC;MACb;;;;;;;YAQmB,8BAAC,GAAG,EAAE;AACxB,WAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;;AAEtB,WAAI,CAAC,CAAC,EAAE;AACN,gBAAO,IAAI,CAAC;QACb;;AAED,WAAI,CAAC,CAAC,QAAQ,KAAK,OAAO,EAAE;AAC1B,gBAAO,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QACrC,MAAM,IAAI,CAAC,CAAC,QAAQ,KAAK,MAAM,EAAE;AAChC,gBAAO,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACrC;AACD,cAAO,IAAI,CAAC;MACb;;;YAlBc,kBAAC,GAAG,EAAE;AACnB,cAAO,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7B;;;;;;;;;;;;;;;;;;;;;;;;AC/FH,KAAM,oBAAoB,GAAG,+BAA+B,CAAC;AAC7D,KAAM,6BAA6B,GAAG,SAAS,CAAC;AAChD,KAAM,gBAAgB,GAAG,CAAC,CAAC;;AAE3B,KAAM,gBAAgB,GAAG,YAAY,CAAC;AACtC,KAAM,qBAAqB,GAAG,gBAAgB,GAAG,GAAG,GAAG,SAAS,CAAC;;;AAGjE,KAAM,wBAAwB,GAAG,2BAA2B,CAAC;AAC7D,KAAM,4BAA4B,GAAG,oCAAoC,CAAC;AAC1E,KAAM,gBAAgB,GAAG,GAAG,CAAC;;;AAGhB,uBAAG;;IACb;;;;;;;YAIY,uBAAC,IAAI,EAAE,CAAC,EAAE,eAAe,EAAE;AACtC,WAAM,IAAI,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC/B,WAAI,MAAM,GAAG,CAAC,CAAC,kBAAkB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,SAAS,GAAG;AACnE,aAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;;AAE1B,aAAI,OAAO,EAAE;AACX,eAAI,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,qBAAqB,EAAE;AAAC,oBAAO,IAAI,CAAC;YAAC;AACtE,kBAAO,OAAO,CAAC,WAAW,EAAE,CAAC;UAC9B;AACD,gBAAO,IAAI,CAAC;QACb,CAAC,CAAC,OAAO,EAAE,CAAC;;AAEb,WAAI,cAAc,GAAG,EAAE,CAAC;AACxB,WAAI,CAAC,KAAK,CAAC,EAAE;AACX,uBAAc,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC,CAAC;QAClE;AACD,qBAAc,GAAG,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;AAE/C,WAAI,CAAC,GAAG,CAAC,KAAK,gBAAgB,EAAE;;AAC9B,gBAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;AACpC,gBAAO,YAAY,CAAC,qBAAqB,CAAC,CAAC;;AAE3C,wBAAe,CAAC,cAAc,CAAC,CAAC;QACjC,MAAM;AACL,qBAAY,CAAC,qBAAqB,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QACtE;MACF;;;YAEY,uBAAC,eAAe,EAAE,eAAe,EAAE;AAC9C,WAAI,CAAC,GAAG,CAAC,CAAC;AACV,WAAI,IAAI,GAAG,IAAI,CAAC;AAChB,gBAAS,YAAY,GAAG;AACtB,aAAI,CAAC,GAAG,gBAAgB,EAAE;AACxB,YAAC,CAAC,IAAI,CAAC;AACL,mBAAM,EAAE,KAAK;AACb,kBAAK,EAAE,oBAAoB,GAAG,6BAA6B,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,QAAQ,EAAE;AAChF,uBAAU,EAAE,MAAM;YACnB,CAAC,CAAC,IAAI,CAAC,SAAS,qBAAqB,CAAC,QAAQ,EAAE;AAC/C,iBAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,EAAE,eAAe,CAAC,CAAC;AACjD,cAAC,IAAI,CAAC,CAAC;AACP,yBAAY,EAAE,CAAC;YAChB,CAAC,CAAC,IAAI,CAAC,SAAS,mBAAmB,CAAC,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE;AACnE,oBAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;AACtC,4BAAe,EAAE,CAAC;;;;YAInB,CAAC,CAAC;UACJ;QACF;AACD,mBAAY,EAAE,CAAC;MAChB;;;;;YAGmB,8BAAC,SAAS,EAAE,eAAe,EAAE,eAAe,EAAE;AAChE,WAAI,IAAI,GAAG,IAAI,CAAC;AAChB,QAAC,CAAC,IAAI,CAAC;AACL,eAAM,EAAE,KAAK;AACb,cAAK,EAAE,wBAAwB,GAAG,SAAS,GAAG,4BAA4B,GAAG,gBAAgB,CAAC,QAAQ,EAAE;AACxG,mBAAU,EAAE,MAAM;AAClB,sBAAa,EAAE,kBAAkB;AACjC,eAAM,EAAE,EAAE;QACX,CAAC,CAAC,IAAI,CAAC,SAAS,wBAAwB,CAAC,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE;AAC/D,aAAK,GAAG,CAAC,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAClE,kBAAO,CAAC,IAAI,CAAC,8BAA8B,GAAG,SAAS,CAAC,CAAC;AACzD,0BAAe,CAAC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;UACtE,MAAM;AACL,kBAAO,CAAC,IAAI,CAAC,sDAAsD,GAAG,SAAS,CAAC,CAAC;AACjF,0BAAe,EAAE,CAAC;UACnB;QACF,CAAC,CAAC,IAAI,CAAC,SAAS,wBAAwB,CAAC,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE;AACxE,gBAAO,CAAC,IAAI,CAAC,4BAA4B,GAAG,SAAS,CAAC,CAAC;AACvD,wBAAe,EAAE,CAAC;QACnB,CAAC,CAAC;MACJ;;;YAEyB,oCAAC,IAAI,EAAE;AAC/B,cAAO,IAAI,CAAC,GAAG,CAAC,SAAS,gBAAgB,CAAC,CAAC,EAAE;AAC3C,gBAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;QACnB,CAAC,CAAC;MACJ;;;;;;;;;;;;;;;;;;;;;;;;;yCChGsB,CAAgB;;;;AAHzC,KAAM,0BAA0B,GAAG,gBAAgB,CAAC;AACpD,KAAM,mBAAmB,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;;;AAK3B,uBAAG;;;AACZ,SAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;IACtC;;;;;;YAGc,yBAAC,GAAG,EAAE,MAAM,EAAE;;AAE3B,WAAM,SAAS,GAAG,0BAAa,QAAQ,CAAC,GAAG,CAAC,CAAC;AAC7C,WAAM,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;AAC5C,WAAI,OAAO,aAAC;AACZ,WAAI,MAAM,aAAC;;AAEX,WAAI,SAAS,EAAE;AACb,gBAAO,GAAG,SAAS,CAAC,IAAI,CAAC;AACzB,eAAM,GAAG,SAAS,CAAC,GAAG,CAAC;;QAExB,MAAM;AACL,kBAAO,GAAG,IAAI,IAAI,GAAC;AACnB,iBAAM,GAAG,SAAS,CAAC;;UAEpB;;AAED,WAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG;AAClB,iBAAQ,EAAE,MAAM;AAChB,eAAM,EAAE,OAAO;QAChB,CAAC;;AAEF,WAAI,CAAC,kBAAkB,EAAE,CAAC;MAC3B;;;YAEc,yBAAC,GAAG,EAAE;AACnB,WAAM,kBAAkB,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;;AAEtD,YAAK,IAAI,CAAC,GAAG,CAAC,EAAE,OAAM,GAAG,kBAAkB,CAAC,MAAM,EAAE,CAAC,GAAG,OAAM,EAAE,CAAC,EAAE,EAAE;AACnE,aAAI,IAAI,CAAC,IAAI,CAAE,kBAAkB,CAAC,CAAC,CAAC,CAAE,EAAE;AACtC,eAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,kBAAO;AACL,kBAAK,EAAE,kBAAkB,CAAC,CAAC,CAAC;AAC5B,qBAAQ,EAAE,IAAI,CAAC,MAAM;AACrB,mBAAM,EAAE,IAAI,CAAC,IAAI;YAClB,CAAC;UACH;QACF;AACD,cAAO,IAAI,CAAC;MACb;;;YAEkB,+BAAG;AACpB,WAAM,QAAQ,GAAG,IAAI,IAAI,GAAC;AAC1B,WAAI,UAAU,aAAC;;AAEf,YAAK,IAAI,OAAO,IAAI,IAAI,CAAC,IAAI,EAAE;AAC7B,aAAI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;AACrC,qBAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC;AACjD,eAAI,UAAU,GAAG,QAAQ,GAAI,mBAAmB,GAAG,EAAE,GAAG,IAAK,EAAE;AAC7D,oBAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC3B;UACF;QACF;MACF;;;;;YAGiB,8BAAG;AACnB,mBAAY,CAAC,0BAA0B,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACtE;;;YAEgB,6BAAG;AAClB,WAAI,YAAY,CAAC,0BAA0B,CAAC,KAAK,SAAS,EAAE;AAC1D,gBAAO,EAAE,CAAC;QACX,MAAM;AACL,gBAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,0BAA0B,CAAC,CAAC,CAAC;QAC7D;MACF;;;YAEe,0BAAC,GAAG,EAAE;AACpB,WAAM,EAAE,GAAG,8BAAiB,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;AAC/C,WAAM,kBAAkB,GAAG,EAAE,CAAC,wBAAwB,EAAE,CAAC;;AAEzD,WAAI,CAAC,kBAAkB,IAAI,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAG;AAC3D,gBAAO,IAAI,CAAC;QACb;AACD,cAAO,kBAAkB,CAAC;MAC3B","file":"backend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap feecd690deb699084b80\n **/","// import UrlVariation from './UrlVariation';\nimport ProviderStore, {HN_PROVIDER_SLUG} from './ProviderStore';\nimport TopUrlStore from './TopUrlStore';\nimport SubmittedUrlStore from './SubmittedUrlStore';\n\n// Server Constants\nconst BASE_SERVER_URL = 'https://content-pass.herokuapp.com/';\n// const BASE_SERVER_URL = 'http://localhost:3000/'\nconst PAGE_VIEW_RELATIVE_URL = 'api/v1/page_views';\nconst LOGIN_RELATIVE_URL = 'api/v1/sessions';\n\n// General refresh\nconst REFRESH_INTERVAL_MINUTES = 20;\nconst REFRESH_RESTART_SCALE = 6; // amount to scale REFRESH_INTERVAL_MINUTES to determine if the HN scraping job should be restarted\n\n// Local Storage\nconst PAGES_RECORDED_TODAY = 'pages_recorded_today';\nconst PAGES_RECORDED_START_DAY = 'pages_recorded_start_day';\nconst ENABLE_TRACKING = 'enable_tracking';\nconst LAST_EXPIRED_SUBMITTED_URL_STORE = 'last_expired_submitted_url_store';\nconst DOWNLOAD_DAEMON_INTERVAL_ID = 'interval_id';\n\n// Icons\nconst PATH_FOR_POSTED_ICON =  '../images/icon20.png';\nconst PATH_FOR_DEFAULT_ICON = '../images/icon20.png';\n\nconst MINS_BETWEEN_SUBMITTED_EXPIRATION_CALLS = 60 * 12;\n// Acceptable weights\nconst WEIGHTS = {\n  '0X': 0,\n  '1X': 1,\n  '5X': 5\n};\nconst DEFAULT_WEIGHT_KEY = '1X';\n\n// Messages, these consts are defined in other files (for future reference, if changed)\nconst LOGIN_MESSAGE = 'LOGIN';\nconst PAGE_LOADED_MESSAGE = 'PAGE_LOADED';\nconst LOGOUT_MESSAGE = 'LOGOUT';\nconst TOGGLE_ENABLED_MESSAGE = 'TOGGLE_ENABLED';\nconst ADD_PROVIDER_MESSAGE = 'ADD_PROVIDER';\nconst REMOVE_PROVIDER_MESSAGE = 'REMOVE_PROVIDER';\n// ******* End Constants ********\n\nfunction loggedIn() {\n  const uuid = localStorage.id;\n  return uuid;\n}\n\nfunction getHoursElapsedToday() {\n  const d = new Date();\n  return d.getHours() + d.getMinutes() / 60.0;\n}\n\nfunction downloadAllPages() {\n  let ps = new ProviderStore;\n  ps.updateAllTopUrlsForProviders();\n}\n\nfunction setDefaultIcon() {\n  chrome.browserAction.setIcon({'path': PATH_FOR_DEFAULT_ICON});\n}\n\nfunction setCurrentPageCount() {\n  chrome.browserAction.setBadgeText({'text': localStorage[PAGES_RECORDED_TODAY]});\n}\n\nfunction initFirstLoginDefaults() {\n    if (localStorage[ENABLE_TRACKING] === undefined) {\n      localStorage[ENABLE_TRACKING] = 'true';\n    }\n}\n\nfunction startDownloadDaemonJob() {\n  localStorage[DOWNLOAD_DAEMON_INTERVAL_ID] = setInterval(\n    downloadAllPages,\n    REFRESH_INTERVAL_MINUTES * 60000\n  ).toString();\n  downloadAllPages();\n}\n\nfunction clearDownloadDaemonJob() {\n  if (localStorage[DOWNLOAD_DAEMON_INTERVAL_ID]) {\n    clearInterval(parseInt(localStorage[DOWNLOAD_DAEMON_INTERVAL_ID], 10));\n    delete localStorage[DOWNLOAD_DAEMON_INTERVAL_ID];\n  }\n}\n\n// Convenience helper provided as setInterval sometimes stops firing\n// In theory, we shouldn't need this\nfunction resetDownloadDaemonJob() {\n  clearDownloadDaemonJob();\n  startDownloadDaemonJob();\n}\n\nfunction checkAttemptRestart() {\n  const provider = new ProviderStore();\n  const lastUpdate = provider.getLastUpdate(HN_PROVIDER_SLUG);\n  if (localStorage[ENABLE_TRACKING] === 'true' && lastUpdate) {\n    const previousDate = Date.parse(lastUpdate);\n    const elapsedSecondsSinceLastUpdate = ( new Date - previousDate ) / 1000;\n\n    if (elapsedSecondsSinceLastUpdate > REFRESH_INTERVAL_MINUTES * 60 * REFRESH_RESTART_SCALE ) {\n      console.info('Restarting Download Daemon');\n      resetDownloadDaemonJob();\n    }\n  }\n}\n\n// *********\n// Post a Page view\nfunction postPageview(url, multiplier, successCallback, failureCallback, userInitiated = false) {\n  const uuid = localStorage.id;\n\n  if (!loggedIn()) {\n    return false;\n  }\n\n  const data = JSON.stringify({\n    'uuid': uuid,\n    'url': url,\n    'weight': multiplier,\n    'user_initiated': userInitiated,\n    'hours_elapsed_today': getHoursElapsedToday()\n  });\n  $.ajax({\n    'url': BASE_SERVER_URL + PAGE_VIEW_RELATIVE_URL,\n    'type': 'POST',\n    'data': data,\n    'contentType': 'application/json',\n    'dataType': 'json'\n  }).done(function pageviewPostSuccessCallback(response, textStatus, xhr) {\n    // Reset counter if the day change, probably should be done on interval not during post\n    let currentDate = (new Date()).getDate();\n    if (parseInt(localStorage[PAGES_RECORDED_START_DAY], 10) !== currentDate) {\n      localStorage[PAGES_RECORDED_START_DAY] = currentDate.toString();\n      localStorage[PAGES_RECORDED_TODAY] = '0';\n    }\n\n    if (xhr.status === 201) {\n      chrome.browserAction.setIcon({'path': PATH_FOR_POSTED_ICON});\n      localStorage[PAGES_RECORDED_TODAY] = (parseInt( localStorage[PAGES_RECORDED_TODAY], 10 ) + 1).toString();\n      setTimeout(setDefaultIcon, 1000);\n      setCurrentPageCount();\n      setAndExpireUrlStore(url, multiplier);\n    } else if (xhr.status === 200) {\n      if (response && response.created_in_recent_hours) {\n        localStorage[PAGES_RECORDED_TODAY] = (parseInt( localStorage[PAGES_RECORDED_TODAY], 10 ) - 1).toString();\n      }\n      chrome.browserAction.setBadgeText({'text': 'Sent'});\n      setTimeout(setCurrentPageCount, 1500);\n      setAndExpireUrlStore(url, multiplier);\n    }\n\n    if (successCallback) {\n      successCallback();\n    }\n  }).fail(function pageviewPostFailureCallback(jqXHR, textStatus, errorThrown ) {\n    console.warn('Could not post page view');\n\n    if (failureCallback) {\n      setAndExpireUrlStore(null, null);\n      failureCallback();\n    }\n  });\n}\n\nfunction setAndExpireUrlStore(url, weight) {\n  let sus = null;\n  if (url && (weight || weight === 0)) {\n    sus = new SubmittedUrlStore();\n    sus.setSubmittedUrl(url, weight);\n  }\n\n  if(!localStorage[LAST_EXPIRED_SUBMITTED_URL_STORE] || new Date(localStorage[LAST_EXPIRED_SUBMITTED_URL_STORE]) + MINS_BETWEEN_SUBMITTED_EXPIRATION_CALLS * 60 * 1000 < (new Date) ) {\n     if (!sus) { sus = new SubmittedUrlStore(); }\n     sus.expireSubmittedUrls();\n     localStorage[LAST_EXPIRED_SUBMITTED_URL_STORE] = new Date;\n  }\n}\n\nfunction setWeight(url, multiplier, successCallback, failureCallback, userInitiated = false) {\n  if (!loggedIn()) {\n    return false;\n  }\n  postPageview(url, multiplier, successCallback, failureCallback, userInitiated);\n}\n\nfunction login(email, password, callback) {\n  const data = JSON.stringify({\n    'email': email,\n    'password': password,\n    'view_count_in_last_hours': getHoursElapsedToday()\n  });\n\n  $.ajax({\n    'url': BASE_SERVER_URL + LOGIN_RELATIVE_URL,\n    'type': 'POST',\n    'data': data,\n    'contentType': 'application/json',\n    'dataType': 'json'\n  }).done(function loginSuccessCallback(responseData) {\n    localStorage[PAGES_RECORDED_TODAY] = responseData.num_urls_recorded_in_last_hours;\n    localStorage[PAGES_RECORDED_START_DAY] = ((new Date()).getDate()).toString();\n    setCurrentPageCount();\n\n    // Configure the first time\n    initFirstLoginDefaults();\n\n    callback(responseData.uuid);\n  }).fail(function loginFailureCallback() {\n    // last_updated_id = null;\n    callback('');\n  });\n}\n\nfunction toggleTracking() {\n  if (localStorage[ENABLE_TRACKING] === 'false') {\n    localStorage[ENABLE_TRACKING] = 'true';\n    startDownloadDaemonJob();\n    return true;\n  } else if (localStorage[ENABLE_TRACKING] === 'true') {\n    clearDownloadDaemonJob();\n    localStorage[ENABLE_TRACKING] = 'false';\n    return false;\n  }\n  return '';\n}\n\nchrome.runtime.onMessage.addListener(\n  function router(request, sender, sendResponse) {\n    switch (request.message) {\n      case ADD_PROVIDER_MESSAGE:\n        (new ProviderStore).addProvider(request.provider_slug);\n        break;\n      case REMOVE_PROVIDER_MESSAGE:\n        (new ProviderStore).removeProvider(request.provider_slug);\n        break;\n      case LOGIN_MESSAGE:\n        login(\n          request.email,\n          request.password,\n          function loginCallback(uuid) {\n            if (uuid && uuid !== '') {\n              localStorage.id = uuid;\n            }\n            sendResponse({\n              'id': uuid\n            });\n            if (localStorage.id) {\n              startDownloadDaemonJob();\n            }\n          });\n          return true;\n      case LOGOUT_MESSAGE:\n        delete localStorage.id;\n        clearDownloadDaemonJob();\n        delete localStorage[PAGES_RECORDED_TODAY];\n        chrome.browserAction.setBadgeText({'text': ''});\n\n        sendResponse({'hello': 'world'});\n        break;\n      case PAGE_LOADED_MESSAGE:\n        const url = sender.tab.url;\n        console.log(url);\n        checkAttemptRestart();\n        const topUrls = new TopUrlStore();\n        if (localStorage[ENABLE_TRACKING] !== 'false' && topUrls.urlInTop(url)) {\n          setWeight(\n            url,\n            WEIGHTS[DEFAULT_WEIGHT_KEY],\n            function pageLoadedSuccessCallback(response) {\n              sendResponse({'success': 'true'});\n            },\n            function pageLoadedFailureCallback(response) {\n              sendResponse({'success': 'false'});\n            }\n          );\n          console.log('Sent to server');\n        } else {\n          // Ignored\n          console.log('Not sent');\n        }\n        break;\n      case TOGGLE_ENABLED_MESSAGE:\n        sendResponse({'tracking_on': toggleTracking() });\n        break;\n      default:\n        if (WEIGHTS.hasOwnProperty(request.message)) {\n        const url = request.url;\n        setWeight(\n          url,\n          WEIGHTS[request.message],\n          function pageLoadedSuccessCallback(response) {\n            sendResponse({'success': 'true'});\n          },\n          function pageLoadedFailureCallback(response) {\n            sendResponse({'success': 'false'});\n          },\n          true);\n          return true;\n      } else {\n        console.warn('Bad weight');\n      }\n      break;\n    }\n  }\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/extension_script.js\n **/","import TopUrlStore from './TopUrlStore';\n// LocalStorage key\nconst ALL_PROVIDERS = 'all_providers';\n\n// Hash keys\nexport const HN_PROVIDER_SLUG = 'hackernews';\nexport const REDDIT_PROVIDER_SLUG_PREFIX = 'reddit_';\n\n// Thin wrapper to allow the creation and removal of providers: subreddits (and Hacker News) that provide lists of top links\n// The main data structure is in the form { 'providername': last_updated_date }\nexport default class {\n  constructor() {}\n\n  // Public\n  addSubredditProvider(subreddit) {\n    if (subreddit && subreddit !== '') {\n      addProvider(REDDIT_PROVIDER_SLUG_PREFIX + subreddit);\n    }\n  }\n\n  addProvider(provider) {\n    this.instantiateProvidersList();\n\n    this.providersList[provider] = '';\n    this.saveProvidersList();\n\n    let o = {};\n    o[provider] = '';\n    this.updateAllTopUrlsForProviders(o);\n  }\n\n  // Run all updates\n  updateAllTopUrlsForProviders(providerListInit = null) {\n    let providerList = providerListInit;\n    if (!providerList) {\n      this.instantiateProvidersList();\n      providerList = this.providersList;\n    }\n    const t = new TopUrlStore();\n\n    for (let providerName in providerList) {\n      if (providerList.hasOwnProperty(providerName)) {\n        if (providerName.startsWith(HN_PROVIDER_SLUG)) {\n          t.populateHNUrlStoreFromServer();\n        } else if (providerName.startsWith(REDDIT_PROVIDER_SLUG_PREFIX)) {\n          const l = providerName.length;\n          const subreddit = providerName.substr(\n            l - (l - REDDIT_PROVIDER_SLUG_PREFIX.length)\n          );\n          t.populateSubredditUrlStoreFromServer(subreddit);\n        }\n      }\n    }\n  }\n\n  removeSubredditProvider(subreddit) {\n    removeProvider(REDDIT_PROVIDER_SLUG_PREFIX + subreddit);\n  }\n\n  removeProvider(provider) {\n    this.instantiateProvidersList();\n\n    delete this.providersList[provider];\n    this.saveProvidersList();\n\n    (new TopUrlStore).removeProviderFromTopUrls(provider);\n  }\n\n  setProviderUpdateToCurrentDate(provider) {\n    this.instantiateProvidersList();\n    if (provider in this.providersList) {\n      this.providersList[provider] = new Date();\n      this.saveProvidersList();\n      return true;\n    }\n    return false;\n  }\n\n  getCurrentProviders() {\n    this.instantiateProvidersList();\n\n    return this.providersList;\n  }\n\n  getLastUpdate(provider) {\n    this.instantiateProvidersList();\n    return this.providersList[provider];\n  }\n\n  // Private\n  instantiateProvidersList() {\n    this.providersList = this.loadProvidersList();\n\n    if (!this.providersList) {\n      this.providersList =  {};\n      this.providersList[HN_PROVIDER_SLUG] = '';\n      this.saveProvidersList();\n    }\n  }\n\n  loadProvidersList() {\n    if (localStorage[ALL_PROVIDERS]) {\n      return JSON.parse(localStorage[ALL_PROVIDERS]);\n    } else { return null; }\n  }\n\n  saveProvidersList() {\n    localStorage[ALL_PROVIDERS] = JSON.stringify(this.providersList);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ProviderStore.js\n **/","import UrlVariation from './UrlVariation';\nimport ProviderStore, {REDDIT_PROVIDER_SLUG_PREFIX, HN_PROVIDER_SLUG} from './ProviderStore';\nimport Downloader from './Downloader';\n\nconst TOP_URLS = 'top_urls';\n\nexport default class {\n  constructor() {}\n\n  urlInTop(url) {\n    if (!url || url === '') {\n      return false;\n    }\n\n    const urlArr = this.getTopUrlsArray();\n    const ur = new UrlVariation(url.toLowerCase());\n    const urlRepresentations = ur.getAllUrlRepresentations();\n\n    if (!urlRepresentations || urlRepresentations.length === 0 ) {\n      return false;\n    }\n\n    // TODO: Change data structure to {}, to speed up lookups\n    for (let i = 0, length = urlRepresentations.length; i < length; i++) {\n      if (urlArr.indexOf(urlRepresentations[i]) !== -1) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  populateHNUrlStoreFromServer() {\n    const that = this;\n    const downloader = new Downloader();\n    downloader.downloadTopHN(\n      function successHN(urlArray) {\n        that.setUrlsForProvider(HN_PROVIDER_SLUG, urlArray);\n      },\n      function failureHN() {}\n    );\n  }\n\n  populateSubredditUrlStoreFromServer(subreddit) {\n    const that = this;\n    const downloader = new Downloader();\n    downloader.downloadSubredditTop(\n      subreddit,\n      function successSubreddit(urlArray) {\n        that.setUrlsForProvider( REDDIT_PROVIDER_SLUG_PREFIX + subreddit.toLowerCase(), urlArray);\n      },\n      function failureSubreddit() {}\n    );\n  }\n\n  static stripQueryParams() {\n\n  }\n\n  // Private\n  setUrlsForProvider(providerName, urls) {\n    this.instantiateTopUrlsList();\n    this.topUrlsList[providerName] = urls;\n    this.saveTopUrlsList();\n\n    const provider = new ProviderStore();\n    provider.setProviderUpdateToCurrentDate(providerName);\n  }\n\n  removeProviderFromTopUrls(provider) {\n    this.instantiateTopUrlsList();\n    delete this.topUrlsList[provider];\n    this.saveTopUrlsList();\n  }\n\n  getTopUrlsArray() {\n    this.instantiateTopUrlsList();\n\n    let urls = [];\n    for (let provider in this.topUrlsList) {\n      if (this.topUrlsList.hasOwnProperty(provider)) {\n        urls = urls.concat(this.topUrlsList[provider]);\n      }\n    }\n    return urls;\n  }\n\n  instantiateTopUrlsList() {\n    this.topUrlsList = this.loadTopUrlsList();\n    if (!this.topUrlsList) {\n      this.topUrlsList = {};\n      this.saveTopUrlsList();\n    }\n  }\n\n  loadTopUrlsList() {\n    if (localStorage[TOP_URLS]) {\n      return JSON.parse(localStorage[TOP_URLS]);\n    } else { return null; }\n  }\n\n  saveTopUrlsList() {\n    localStorage[TOP_URLS] = JSON.stringify(this.topUrlsList);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/TopUrlStore.js\n **/","// parseUri 1.2.2\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nfunction parseUri(str) {\n  let o = parseUri.options;\n  let m   = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n  let uri = {};\n  let i   = 14;\n\n  while (i--) uri[o.key[i]] = m[i] || '';\n\n  uri[o.q.name] = {};\n  uri[o.key[12]].replace(o.q.parser, function doUriReplace($0, $1, $2) {\n    if ($1) uri[o.q.name][$1] = $2;\n  });\n\n  return uri;\n}\n\nparseUri.options = {\n  'strictMode': false,\n  'key': ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'],\n  'q': {\n    'name': 'queryKey',\n    'parser': /(?:^|&)([^&=]*)=?([^&]*)/g\n  },\n  'parser': {\n    'strict': /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n    'loose': /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\n\nexport default class {\n  constructor(url) {\n    if (url) {\n      this.url = url.toLowerCase();\n      this.parsedUrl = null;\n      if (this.url) {\n        this.parsedUrl = parseUri(this.url);\n      }\n    }\n  }\n\n  // Public\n  getAllUrlRepresentations() {\n    // let p = this.parsedUrl;\n\n    if (!this.url || this.url === '' || !this.parsedUrl) {\n      return null;\n    }\n\n    let urlRepresentations = [ this.url ];\n    let altProtocolUrl = this.alternateProtocolUrl(this.url);\n    if (altProtocolUrl) {\n      urlRepresentations.push(altProtocolUrl);\n    }\n\n    let withoutQuery = this.withoutQueryParameters();\n    if (withoutQuery) {\n      urlRepresentations = urlRepresentations.concat(withoutQuery);\n    }\n\n    return urlRepresentations;\n  }\n\n  // Private\n  withoutQueryParameters() {\n    let p = this.parsedUrl;\n    let results = [];\n\n    if (p.query) {\n      let withoutQueryParams;\n      withoutQueryParams = p.protocol + '://' + p.host;\n      if (p.port) {\n        withoutQueryParams += ':' + p.port;\n      }\n      withoutQueryParams += p.path;\n      if (p.anchor) {\n        withoutQueryParams += '#' + p.anchor;\n      }\n      results.push(withoutQueryParams); // without query parameters\n\n      let altProtocolUrl = this.alternateProtocolUrl(withoutQueryParams);\n      if (altProtocolUrl) {\n        results.push(altProtocolUrl);\n      }\n\n      return results;\n    }\n\n    return null;\n  }\n\n  // Strip means remove query parameters and anchor from the URL\n  static stripUrl(url) {\n    return url.split(/[?#]/)[0];\n  }\n\n  // Add HTTP representation for HTTPS, and vice versa\n  alternateProtocolUrl(url) {\n    let p = parseUri(url);\n\n    if (!p) {\n      return null;\n    }\n\n    if (p.protocol === 'https') {\n      return url.replace('https', 'http');\n    } else if (p.protocol === 'http') {\n      return url.replace('http', 'https');\n    }\n    return null;\n  }\n}\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/UrlVariation.js\n **/","// Hacker News Constants\nconst HN_PROVIDER_BASE_URL = 'https://news.ycombinator.com/';\nconst HN_PROVIDER_PAGE_RELATIVE_URL = 'news?p=';\nconst HN_MAX_NUM_PAGES = 4;\n\nconst HN_PROVIDER_SLUG = 'hackernews';\nconst HN_DICT_URLS_TEMP_KEY = HN_PROVIDER_SLUG + '_' + 'newUrls';\n\n// Reddit\nconst REDDIT_PROVIDER_BASE_URL = 'https://www.reddit.com/r/';\nconst REDDIT_PROVIDER_RELATIVE_URL = '/top.json?sort=top&show=all&limit=';\nconst REDDIT_NUM_POSTS = 100; // Max is a 100, larger requires pagination\n\nexport default class {\n  constructor() {\n  }\n\n  // Hacker News\n  // Get Top 150 URLs on HN every 10 minutes\n  extractHNUrls(data, i, successCallback) {\n    const html = $.parseHTML(data);\n    let urlArr = $('.athing .title a', $(html)).map(function findHNUrl() {\n      const currUrl = this.href;\n\n      if (currUrl) {\n        if (currUrl.substring(0, 19) === 'chrome-extension://') {return null;}\n        return currUrl.toLowerCase();\n      }\n      return null;\n    }).toArray();\n\n    let existingUrlArr = [];\n    if (i !== 0) {\n      existingUrlArr = JSON.parse(localStorage[HN_DICT_URLS_TEMP_KEY]);\n    }\n    existingUrlArr = existingUrlArr.concat(urlArr);\n\n    if (i + 1 === HN_MAX_NUM_PAGES) { //  Last time -- overwrite\n      console.info('Done downloading HN');\n      delete localStorage[HN_DICT_URLS_TEMP_KEY];\n\n      successCallback(existingUrlArr);\n    } else {\n      localStorage[HN_DICT_URLS_TEMP_KEY] = JSON.stringify(existingUrlArr);\n    }\n  }\n\n  downloadTopHN(successCallback, failureCallback) {\n    let i = 0;\n    let that = this;\n    function downloadPage() {\n      if (i < HN_MAX_NUM_PAGES) {\n        $.ajax({\n          'type': 'GET',\n          'url': HN_PROVIDER_BASE_URL + HN_PROVIDER_PAGE_RELATIVE_URL + (i + 1).toString(),\n          'dataType': 'html'\n        }).done(function downloadHnPageSuccess(response) {\n          that.extractHNUrls(response, i, successCallback);\n          i += 1;\n          downloadPage();\n        }).fail(function downloadHnPageError(jqXHR, textStatus, errorThrown) {\n          console.warn('Could not download HN');\n          failureCallback();\n          // console.log(jqXHR);\n          // console.log(textStatus);\n          // console.log(errorThrown);\n        });\n      }\n    }\n    downloadPage();\n  }\n\n  // Reddit\n  downloadSubredditTop(subreddit, successCallback, failureCallback) {\n    let that = this;\n    $.ajax({\n      'type': 'GET',\n      'url': REDDIT_PROVIDER_BASE_URL + subreddit + REDDIT_PROVIDER_RELATIVE_URL + REDDIT_NUM_POSTS.toString(),\n      'dataType': 'json',\n      'contentType': 'application/json',\n      'data': ''\n    }).done(function downloadSubredditSuccess(data, textStatus, xhr) {\n      if ( xhr.status === 200 && data && data.data && data.data.children) {\n        console.info('Done downloading subreddit: ' + subreddit);\n        successCallback(that.parseUrlsFromSubredditData(data.data.children));\n      } else {\n        console.warn('Reddit: No data or bad data received for subreddit: ' + subreddit);\n        failureCallback();\n      }\n    }).fail(function downloadSubredditFailure(jqXHR, textStatus, errorThrown) {\n      console.warn('Could not load subreddit: ' + subreddit);\n      failureCallback();\n    });\n  }\n\n  parseUrlsFromSubredditData(data) {\n    return data.map(function getRedditPostUrl(o) {\n      return o.data.url;\n    });\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Downloader.js\n **/","const SUBMITTED_URLS_STORAGE_KEY = 'submitted_urls';\nconst EXPIRY_TIME_MINUTES = 60 * 24 * 7;\n\nimport UrlVariation from './UrlVariation';\n\nexport default class {\n  constructor() {\n    this.data = this.loadSubmittedUrls();\n  }\n\n  // Date is stored in Unix time\n  setSubmittedUrl(url, weight) {\n    // strip lookup URL - no query parameters, no id\n    const lookupUrl = UrlVariation.stripUrl(url);\n    const urlSearch = this.getDetailsOfUrl(url);\n    let newDate;\n    let urlKey;\n\n    if (urlSearch) {\n      newDate = urlSearch.date;\n      urlKey = urlSearch.url;\n      // console.log('SubmittedUrls: Updating old entry ' + urlKey);\n    } else {\n      newDate = new Date;\n      urlKey = lookupUrl;\n      // console.log('SubmittedUrls: Storing new entry ' + urlKey);\n    }\n\n    this.data[urlKey] = {\n      'weight': weight,\n      'date': newDate\n    };\n\n    this.storeSubmittedUrls();\n  }\n\n  getDetailsOfUrl(url) {\n    const urlRepresentations = this.getUrlVariations(url);\n\n    for (let i = 0, length = urlRepresentations.length; i < length; i++) {\n      if (this.data[ urlRepresentations[i] ]) {\n        const elem = this.data[urlRepresentations[i]];\n        return {\n          'url': urlRepresentations[i],\n          'weight': elem.weight,\n          'date': elem.date\n        };\n      }\n    }\n    return null;\n  }\n\n  expireSubmittedUrls() {\n    const currDate = new Date;\n    let parsedDate;\n\n    for (let keyName in this.data) {\n      if (this.data.hasOwnProperty(keyName)) {\n        parsedDate = Date.parse(this.data[keyName].date);\n        if (parsedDate < currDate + (EXPIRY_TIME_MINUTES * 60 * 1000)) {\n          delete this.data[keyName];\n        }\n      }\n    }\n  }\n\n  // Private\n  storeSubmittedUrls() {\n    localStorage[SUBMITTED_URLS_STORAGE_KEY] = JSON.stringify(this.data);\n  }\n\n  loadSubmittedUrls() {\n    if (localStorage[SUBMITTED_URLS_STORAGE_KEY] === undefined) {\n      return {};\n    } else {\n      return JSON.parse(localStorage[SUBMITTED_URLS_STORAGE_KEY]);\n    }\n  }\n\n  getUrlVariations(url) {\n    const ur = new UrlVariation(url.toLowerCase());\n    const urlRepresentations = ur.getAllUrlRepresentations();\n\n    if (!urlRepresentations || urlRepresentations.length === 0 ) {\n      return null;\n    }\n    return urlRepresentations;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/SubmittedUrlStore.js\n **/"],"sourceRoot":""}